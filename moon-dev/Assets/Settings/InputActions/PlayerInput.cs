//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Settings/InputActions/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerAction: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""b08f03bb-6ffc-40f6-83a9-0213de34ebf2"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""f5c6222b-74cc-410c-8736-0cb4b37f9c43"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""e73ed3f3-7a67-40f4-94d6-af884149236b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""9c98bb30-73e6-45c7-8e32-2a18992f4d88"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Slice"",
                    ""type"": ""Button"",
                    ""id"": ""cdf6a16e-de3c-4419-b1c3-1b52a8f15385"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b0eab64e-3c52-436c-87bd-12434ee7ca65"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""f8dc187d-8a09-47da-b957-6066058168a0"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1c108b28-d43b-4845-9d57-89561481c200"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""71fee988-be16-4134-9e84-97b5d8e9751b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""278bd79b-b44e-4d12-be1f-f51c4088e2d9"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""33355f68-a013-4009-871d-609134bc8c63"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""f57c2c18-8f19-4273-992b-ad3d9bf487ea"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""20953cc3-e836-4e8f-a7d1-be657c9752b8"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Slice"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""LevelEditor"",
            ""id"": ""9449d73d-313b-4118-82e3-24a8bb0259be"",
            ""actions"": [
                {
                    ""name"": ""MouseLeftButton"",
                    ""type"": ""Button"",
                    ""id"": ""ae21c847-1f66-4316-a262-eee5769f3ff8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseRightButton"",
                    ""type"": ""Button"",
                    ""id"": ""29e8cb2b-90b0-4773-991a-30b90ee84ad0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseMiddleButton"",
                    ""type"": ""Button"",
                    ""id"": ""32cac3c6-3d5c-4bb2-921e-711d7d4451ef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseScroll"",
                    ""type"": ""Value"",
                    ""id"": ""2bfb80a4-26ed-4d90-b555-054a5519e77a"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ShiftButton"",
                    ""type"": ""Button"",
                    ""id"": ""799fdf90-8207-4541-9b7c-32adda34045c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CtrlButton"",
                    ""type"": ""Button"",
                    ""id"": ""c2aa88f7-dfa8-4be0-8686-305030f30d45"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ZButton"",
                    ""type"": ""Button"",
                    ""id"": ""8717c785-5f1d-4701-a017-277ff0cc177e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DeleteButton"",
                    ""type"": ""Button"",
                    ""id"": ""4151a266-1614-4499-8e94-482da3f8a5d8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CButton"",
                    ""type"": ""Button"",
                    ""id"": ""95f1226a-e9a8-4638-9efa-c98114234c07"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""VButton"",
                    ""type"": ""Button"",
                    ""id"": ""9f4a6263-ca35-483d-b910-e0870c7fa6f7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EscapeButton"",
                    ""type"": ""Button"",
                    ""id"": ""180c7d23-1eb8-4004-a851-e0008e144a07"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""389e03b5-e949-4899-abfb-39c6ad3c27f7"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseLeftButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""15886c0f-15cb-4a94-be05-8411631d1008"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseRightButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""493c756c-f7c7-4c50-a956-eb3e3810d213"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseMiddleButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""24662bfa-e8b2-43a9-86d4-b94044ef1294"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad9aba12-9d0b-4993-807d-fba5e3aa92cb"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShiftButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b6d4f76-839e-4277-b42c-234159d240e3"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CtrlButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""81f23e94-4f93-4fc3-a37e-c8086864ce22"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7100a455-0aa8-4b57-bf4e-be2a506f82cc"",
                    ""path"": ""<Keyboard>/delete"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DeleteButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""32f6e085-9b0a-43e1-81e8-d00f11fd5ad3"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e56c1b03-66a5-4ab1-a16d-aba6237027fe"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a338956-05a9-4ba7-a7e3-2350afa87c59"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EscapeButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Debugger"",
            ""id"": ""4cf33d12-3205-4d8f-babc-c5cae1dc0812"",
            ""actions"": [
                {
                    ""name"": ""Num1"",
                    ""type"": ""Value"",
                    ""id"": ""5d717891-86b6-488d-bc63-560d9fdbefa6"",
                    ""expectedControlType"": ""Integer"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Num2"",
                    ""type"": ""Button"",
                    ""id"": ""45f24c21-de1f-4fe7-b0c1-c4964980cfc3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Num3"",
                    ""type"": ""Button"",
                    ""id"": ""b2adbc1c-23e2-4af3-8066-1095b87298f1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Num4"",
                    ""type"": ""Button"",
                    ""id"": ""15ad083e-7539-437e-a8ab-06f53e7628bf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Num5"",
                    ""type"": ""Button"",
                    ""id"": ""673da418-c86f-4073-be0c-13a3e1d04d75"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""92675584-e303-44a7-b0b8-b787a7bcb926"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Num1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""393f2e32-309c-4d98-84ac-33cef61c7c81"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Num2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cb42c541-2b10-4f96-99fd-8e1e662fc51f"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Num3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""875b1717-4e88-4e76-9d82-f34562dd053a"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Num4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""915b6cf6-44ba-4da8-88ce-eaa81c7ad1cf"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Num5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_Run = m_Player.FindAction("Run", throwIfNotFound: true);
        m_Player_Slice = m_Player.FindAction("Slice", throwIfNotFound: true);
        // LevelEditor
        m_LevelEditor = asset.FindActionMap("LevelEditor", throwIfNotFound: true);
        m_LevelEditor_MouseLeftButton = m_LevelEditor.FindAction("MouseLeftButton", throwIfNotFound: true);
        m_LevelEditor_MouseRightButton = m_LevelEditor.FindAction("MouseRightButton", throwIfNotFound: true);
        m_LevelEditor_MouseMiddleButton = m_LevelEditor.FindAction("MouseMiddleButton", throwIfNotFound: true);
        m_LevelEditor_MouseScroll = m_LevelEditor.FindAction("MouseScroll", throwIfNotFound: true);
        m_LevelEditor_ShiftButton = m_LevelEditor.FindAction("ShiftButton", throwIfNotFound: true);
        m_LevelEditor_CtrlButton = m_LevelEditor.FindAction("CtrlButton", throwIfNotFound: true);
        m_LevelEditor_ZButton = m_LevelEditor.FindAction("ZButton", throwIfNotFound: true);
        m_LevelEditor_DeleteButton = m_LevelEditor.FindAction("DeleteButton", throwIfNotFound: true);
        m_LevelEditor_CButton = m_LevelEditor.FindAction("CButton", throwIfNotFound: true);
        m_LevelEditor_VButton = m_LevelEditor.FindAction("VButton", throwIfNotFound: true);
        m_LevelEditor_EscapeButton = m_LevelEditor.FindAction("EscapeButton", throwIfNotFound: true);
        // Debugger
        m_Debugger = asset.FindActionMap("Debugger", throwIfNotFound: true);
        m_Debugger_Num1 = m_Debugger.FindAction("Num1", throwIfNotFound: true);
        m_Debugger_Num2 = m_Debugger.FindAction("Num2", throwIfNotFound: true);
        m_Debugger_Num3 = m_Debugger.FindAction("Num3", throwIfNotFound: true);
        m_Debugger_Num4 = m_Debugger.FindAction("Num4", throwIfNotFound: true);
        m_Debugger_Num5 = m_Debugger.FindAction("Num5", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_Run;
    private readonly InputAction m_Player_Slice;
    public struct PlayerActions
    {
        private @PlayerAction m_Wrapper;
        public PlayerActions(@PlayerAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @Run => m_Wrapper.m_Player_Run;
        public InputAction @Slice => m_Wrapper.m_Player_Slice;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Run.started += instance.OnRun;
            @Run.performed += instance.OnRun;
            @Run.canceled += instance.OnRun;
            @Slice.started += instance.OnSlice;
            @Slice.performed += instance.OnSlice;
            @Slice.canceled += instance.OnSlice;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Run.started -= instance.OnRun;
            @Run.performed -= instance.OnRun;
            @Run.canceled -= instance.OnRun;
            @Slice.started -= instance.OnSlice;
            @Slice.performed -= instance.OnSlice;
            @Slice.canceled -= instance.OnSlice;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // LevelEditor
    private readonly InputActionMap m_LevelEditor;
    private List<ILevelEditorActions> m_LevelEditorActionsCallbackInterfaces = new List<ILevelEditorActions>();
    private readonly InputAction m_LevelEditor_MouseLeftButton;
    private readonly InputAction m_LevelEditor_MouseRightButton;
    private readonly InputAction m_LevelEditor_MouseMiddleButton;
    private readonly InputAction m_LevelEditor_MouseScroll;
    private readonly InputAction m_LevelEditor_ShiftButton;
    private readonly InputAction m_LevelEditor_CtrlButton;
    private readonly InputAction m_LevelEditor_ZButton;
    private readonly InputAction m_LevelEditor_DeleteButton;
    private readonly InputAction m_LevelEditor_CButton;
    private readonly InputAction m_LevelEditor_VButton;
    private readonly InputAction m_LevelEditor_EscapeButton;
    public struct LevelEditorActions
    {
        private @PlayerAction m_Wrapper;
        public LevelEditorActions(@PlayerAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @MouseLeftButton => m_Wrapper.m_LevelEditor_MouseLeftButton;
        public InputAction @MouseRightButton => m_Wrapper.m_LevelEditor_MouseRightButton;
        public InputAction @MouseMiddleButton => m_Wrapper.m_LevelEditor_MouseMiddleButton;
        public InputAction @MouseScroll => m_Wrapper.m_LevelEditor_MouseScroll;
        public InputAction @ShiftButton => m_Wrapper.m_LevelEditor_ShiftButton;
        public InputAction @CtrlButton => m_Wrapper.m_LevelEditor_CtrlButton;
        public InputAction @ZButton => m_Wrapper.m_LevelEditor_ZButton;
        public InputAction @DeleteButton => m_Wrapper.m_LevelEditor_DeleteButton;
        public InputAction @CButton => m_Wrapper.m_LevelEditor_CButton;
        public InputAction @VButton => m_Wrapper.m_LevelEditor_VButton;
        public InputAction @EscapeButton => m_Wrapper.m_LevelEditor_EscapeButton;
        public InputActionMap Get() { return m_Wrapper.m_LevelEditor; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(LevelEditorActions set) { return set.Get(); }
        public void AddCallbacks(ILevelEditorActions instance)
        {
            if (instance == null || m_Wrapper.m_LevelEditorActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_LevelEditorActionsCallbackInterfaces.Add(instance);
            @MouseLeftButton.started += instance.OnMouseLeftButton;
            @MouseLeftButton.performed += instance.OnMouseLeftButton;
            @MouseLeftButton.canceled += instance.OnMouseLeftButton;
            @MouseRightButton.started += instance.OnMouseRightButton;
            @MouseRightButton.performed += instance.OnMouseRightButton;
            @MouseRightButton.canceled += instance.OnMouseRightButton;
            @MouseMiddleButton.started += instance.OnMouseMiddleButton;
            @MouseMiddleButton.performed += instance.OnMouseMiddleButton;
            @MouseMiddleButton.canceled += instance.OnMouseMiddleButton;
            @MouseScroll.started += instance.OnMouseScroll;
            @MouseScroll.performed += instance.OnMouseScroll;
            @MouseScroll.canceled += instance.OnMouseScroll;
            @ShiftButton.started += instance.OnShiftButton;
            @ShiftButton.performed += instance.OnShiftButton;
            @ShiftButton.canceled += instance.OnShiftButton;
            @CtrlButton.started += instance.OnCtrlButton;
            @CtrlButton.performed += instance.OnCtrlButton;
            @CtrlButton.canceled += instance.OnCtrlButton;
            @ZButton.started += instance.OnZButton;
            @ZButton.performed += instance.OnZButton;
            @ZButton.canceled += instance.OnZButton;
            @DeleteButton.started += instance.OnDeleteButton;
            @DeleteButton.performed += instance.OnDeleteButton;
            @DeleteButton.canceled += instance.OnDeleteButton;
            @CButton.started += instance.OnCButton;
            @CButton.performed += instance.OnCButton;
            @CButton.canceled += instance.OnCButton;
            @VButton.started += instance.OnVButton;
            @VButton.performed += instance.OnVButton;
            @VButton.canceled += instance.OnVButton;
            @EscapeButton.started += instance.OnEscapeButton;
            @EscapeButton.performed += instance.OnEscapeButton;
            @EscapeButton.canceled += instance.OnEscapeButton;
        }

        private void UnregisterCallbacks(ILevelEditorActions instance)
        {
            @MouseLeftButton.started -= instance.OnMouseLeftButton;
            @MouseLeftButton.performed -= instance.OnMouseLeftButton;
            @MouseLeftButton.canceled -= instance.OnMouseLeftButton;
            @MouseRightButton.started -= instance.OnMouseRightButton;
            @MouseRightButton.performed -= instance.OnMouseRightButton;
            @MouseRightButton.canceled -= instance.OnMouseRightButton;
            @MouseMiddleButton.started -= instance.OnMouseMiddleButton;
            @MouseMiddleButton.performed -= instance.OnMouseMiddleButton;
            @MouseMiddleButton.canceled -= instance.OnMouseMiddleButton;
            @MouseScroll.started -= instance.OnMouseScroll;
            @MouseScroll.performed -= instance.OnMouseScroll;
            @MouseScroll.canceled -= instance.OnMouseScroll;
            @ShiftButton.started -= instance.OnShiftButton;
            @ShiftButton.performed -= instance.OnShiftButton;
            @ShiftButton.canceled -= instance.OnShiftButton;
            @CtrlButton.started -= instance.OnCtrlButton;
            @CtrlButton.performed -= instance.OnCtrlButton;
            @CtrlButton.canceled -= instance.OnCtrlButton;
            @ZButton.started -= instance.OnZButton;
            @ZButton.performed -= instance.OnZButton;
            @ZButton.canceled -= instance.OnZButton;
            @DeleteButton.started -= instance.OnDeleteButton;
            @DeleteButton.performed -= instance.OnDeleteButton;
            @DeleteButton.canceled -= instance.OnDeleteButton;
            @CButton.started -= instance.OnCButton;
            @CButton.performed -= instance.OnCButton;
            @CButton.canceled -= instance.OnCButton;
            @VButton.started -= instance.OnVButton;
            @VButton.performed -= instance.OnVButton;
            @VButton.canceled -= instance.OnVButton;
            @EscapeButton.started -= instance.OnEscapeButton;
            @EscapeButton.performed -= instance.OnEscapeButton;
            @EscapeButton.canceled -= instance.OnEscapeButton;
        }

        public void RemoveCallbacks(ILevelEditorActions instance)
        {
            if (m_Wrapper.m_LevelEditorActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ILevelEditorActions instance)
        {
            foreach (var item in m_Wrapper.m_LevelEditorActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_LevelEditorActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public LevelEditorActions @LevelEditor => new LevelEditorActions(this);

    // Debugger
    private readonly InputActionMap m_Debugger;
    private List<IDebuggerActions> m_DebuggerActionsCallbackInterfaces = new List<IDebuggerActions>();
    private readonly InputAction m_Debugger_Num1;
    private readonly InputAction m_Debugger_Num2;
    private readonly InputAction m_Debugger_Num3;
    private readonly InputAction m_Debugger_Num4;
    private readonly InputAction m_Debugger_Num5;
    public struct DebuggerActions
    {
        private @PlayerAction m_Wrapper;
        public DebuggerActions(@PlayerAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @Num1 => m_Wrapper.m_Debugger_Num1;
        public InputAction @Num2 => m_Wrapper.m_Debugger_Num2;
        public InputAction @Num3 => m_Wrapper.m_Debugger_Num3;
        public InputAction @Num4 => m_Wrapper.m_Debugger_Num4;
        public InputAction @Num5 => m_Wrapper.m_Debugger_Num5;
        public InputActionMap Get() { return m_Wrapper.m_Debugger; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DebuggerActions set) { return set.Get(); }
        public void AddCallbacks(IDebuggerActions instance)
        {
            if (instance == null || m_Wrapper.m_DebuggerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DebuggerActionsCallbackInterfaces.Add(instance);
            @Num1.started += instance.OnNum1;
            @Num1.performed += instance.OnNum1;
            @Num1.canceled += instance.OnNum1;
            @Num2.started += instance.OnNum2;
            @Num2.performed += instance.OnNum2;
            @Num2.canceled += instance.OnNum2;
            @Num3.started += instance.OnNum3;
            @Num3.performed += instance.OnNum3;
            @Num3.canceled += instance.OnNum3;
            @Num4.started += instance.OnNum4;
            @Num4.performed += instance.OnNum4;
            @Num4.canceled += instance.OnNum4;
            @Num5.started += instance.OnNum5;
            @Num5.performed += instance.OnNum5;
            @Num5.canceled += instance.OnNum5;
        }

        private void UnregisterCallbacks(IDebuggerActions instance)
        {
            @Num1.started -= instance.OnNum1;
            @Num1.performed -= instance.OnNum1;
            @Num1.canceled -= instance.OnNum1;
            @Num2.started -= instance.OnNum2;
            @Num2.performed -= instance.OnNum2;
            @Num2.canceled -= instance.OnNum2;
            @Num3.started -= instance.OnNum3;
            @Num3.performed -= instance.OnNum3;
            @Num3.canceled -= instance.OnNum3;
            @Num4.started -= instance.OnNum4;
            @Num4.performed -= instance.OnNum4;
            @Num4.canceled -= instance.OnNum4;
            @Num5.started -= instance.OnNum5;
            @Num5.performed -= instance.OnNum5;
            @Num5.canceled -= instance.OnNum5;
        }

        public void RemoveCallbacks(IDebuggerActions instance)
        {
            if (m_Wrapper.m_DebuggerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDebuggerActions instance)
        {
            foreach (var item in m_Wrapper.m_DebuggerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DebuggerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DebuggerActions @Debugger => new DebuggerActions(this);
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnSlice(InputAction.CallbackContext context);
    }
    public interface ILevelEditorActions
    {
        void OnMouseLeftButton(InputAction.CallbackContext context);
        void OnMouseRightButton(InputAction.CallbackContext context);
        void OnMouseMiddleButton(InputAction.CallbackContext context);
        void OnMouseScroll(InputAction.CallbackContext context);
        void OnShiftButton(InputAction.CallbackContext context);
        void OnCtrlButton(InputAction.CallbackContext context);
        void OnZButton(InputAction.CallbackContext context);
        void OnDeleteButton(InputAction.CallbackContext context);
        void OnCButton(InputAction.CallbackContext context);
        void OnVButton(InputAction.CallbackContext context);
        void OnEscapeButton(InputAction.CallbackContext context);
    }
    public interface IDebuggerActions
    {
        void OnNum1(InputAction.CallbackContext context);
        void OnNum2(InputAction.CallbackContext context);
        void OnNum3(InputAction.CallbackContext context);
        void OnNum4(InputAction.CallbackContext context);
        void OnNum5(InputAction.CallbackContext context);
    }
}
